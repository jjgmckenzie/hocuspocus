{"version":3,"file":"hocuspocus-throttle.cjs","sources":["../src/index.ts"],"sourcesContent":["import {\n  Extension,\n  onConnectPayload,\n} from '@hocuspocus/server'\n\nexport interface ThrottleConfiguration {\n  throttle: number | null | false, // how many requests within `consideredSeconds` until we're rejecting requests (setting this to 15 means the 16th request will be rejected)\n  consideredSeconds: number, // how many seconds to consider (default is last 60 seconds from the current connection attempt)\n  banTime: number, // for how long to ban after receiving too many requests (in minutes!)\n  cleanupInterval: number // how often to clean up the records of IPs (this won't delete ips that are still blocked or recent enough by `consideredSeconds`)\n}\n\nexport class Throttle implements Extension {\n\n  configuration: ThrottleConfiguration = {\n    throttle: 15,\n    banTime: 5,\n    consideredSeconds: 60,\n    cleanupInterval: 90,\n  }\n\n  connectionsByIp: Map<string, Array<number>> = new Map()\n\n  bannedIps: Map<string, number> = new Map()\n\n  cleanupInterval?: NodeJS.Timer\n\n  /**\n   * Constructor\n   */\n  constructor(configuration?: Partial<ThrottleConfiguration>) {\n    this.configuration = {\n      ...this.configuration,\n      ...configuration,\n    }\n\n    this.cleanupInterval = setInterval(this.clearMaps.bind(this), this.configuration.cleanupInterval * 1000)\n  }\n\n  onDestroy() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n    }\n\n    return Promise.resolve()\n  }\n\n  public clearMaps() {\n    this.connectionsByIp.forEach((value, key) => {\n      const filteredValue = value\n        .filter(timestamp => timestamp + (this.configuration.consideredSeconds * 1000) > Date.now())\n\n      if (filteredValue.length) {\n        this.connectionsByIp.set(key, filteredValue)\n      } else {\n        this.connectionsByIp.delete(key)\n      }\n    })\n\n    this.bannedIps.forEach((value, key) => {\n      if (!this.isBanned(key)) {\n        this.bannedIps.delete(key)\n      }\n    })\n  }\n\n  isBanned(ip: string) {\n    const bannedAt = this.bannedIps.get(ip) || 0\n    return Date.now() < (bannedAt + (this.configuration.banTime * 60 * 1000))\n  }\n\n  /**\n   * Throttle requests\n   * @private\n   */\n  private throttle(ip: string): Boolean {\n    if (!this.configuration.throttle) {\n      return false\n    }\n\n    if (this.isBanned(ip)) return true\n\n    this.bannedIps.delete(ip)\n\n    // add this connection try to the list of previous connections\n    const previousConnections = this.connectionsByIp.get(ip) || []\n    previousConnections.push(Date.now())\n\n    // calculate the previous connections in the last considered time interval\n    const previousConnectionsInTheConsideredInterval = previousConnections\n      .filter(timestamp => timestamp + (this.configuration.consideredSeconds * 1000) > Date.now())\n\n    this.connectionsByIp.set(ip, previousConnectionsInTheConsideredInterval)\n\n    if (previousConnectionsInTheConsideredInterval.length > this.configuration.throttle) {\n      this.bannedIps.set(ip, Date.now())\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * onConnect hook\n   * @param data\n   */\n  onConnect(data: onConnectPayload): Promise<any> {\n    const { request } = data\n\n    // get the remote ip address\n    const ip = request.headers['x-real-ip']\n      || request.headers['x-forwarded-for']\n      || request.socket.remoteAddress\n      || ''\n\n    // throttle the connection\n    return this.throttle(<string> ip) ? Promise.reject() : Promise.resolve()\n  }\n\n}\n"],"names":[],"mappings":"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"}